# Default values for mlappdeploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Dependencies
ingress-nginx:
  enabled: true
kube-prometheus-stack:
  enabled: true
  namespaceOverride: kube-prometheus-stack
gpu-operator:
  enabled: true
  namespaceOverride: gpu-operator

  validator:
    repository: docker.io/nvidia
  operator:
    repository: docker.io/nvidia
    defaultRuntime: containerd
    initContainer:
      repository: docker.io/nvidia
  driver:
    enabled: false
    repository: docker.io/nvidia
  toolkit:
    enabled: true
    repository: docker.io/nvidia
  dcgm:
    enabled: true
  dcgmExporter:
    repository: docker.io/nvidia
  gfd:
    repository: docker.io/nvidia
  migManager:
    enabled: false
    repository: docker.io/nvidia
# dcgm-exporter:
#   enabled: false
#   image:
#     repository: docker.io/nvidia/dcgm-exporter
# nvidia-device-plugin:
#   enabled: false
#   image:
#     repository: docker.io/nvidia/k8s-device-plugin
# gpu-feature-discovery:
#   enabled: false
#   image:
#     repository: docker.io/nvidia/gpu-feature-discovery
###################

replicaCount: 1

image:
  fromDockerhub: false
  repository: ghcr.io/onetop21/mlappdeploy/api-server
  pullPolicy: IfNotPresent

port: 8440

imagePullSecrets: []
nameOverride: "api-server"
fullnameOverride: ""

env:
  MLAD_DEBUG: 1
  MLAD_KUBE: 1
  PYTHONUNBUFFERED: 1

clusterRole:
  enabled: true
  rules:
    - apiGroups: ["", "apps", "batch", "extensions", "rbac.authorization.k8s.io", "networking.k8s.io", "metrics.k8s.io"]
      resources: ["nodes", "namespaces", "services", "pods", "pods/log", "replicationcontrollers", "deployments", "replicaset", "jobs", "configmaps", "secrets", "events", "rolebindings", "ingresses", "podmetrics"]
      verbs: ["get", "watch", "list", "create", "update", "delete", "patch", "deletecollection"]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8440
  targetPort: 8440

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - paths:
      - path: /
        backend:
          serviceName: mlad-service
          servicePort: 8440
          
tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
