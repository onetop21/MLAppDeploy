# Default values for mlappdeploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fromDockerhub: false

# Dependencies and subcharts
# nvidia-device-plugin:
#   enabled: true
# gpu-feature-discovery:
#   enabled: true
#   nfd:
#     deploy: true
# dcgm-exporter:
#   enabled: true
#   serviceMonitor:
#     enabled: true
#     additionalLabels: 
#       release: prometheus-stack
#     namespace:
#   affinity:
#     nodeAffinity:
#       requiredDuringSchedulingIgnoredDuringExecution:
#         nodeSelectorTerms:
#         - matchExpressions:
#           - key: nvidia.com/gpu.product
#             operator: Exists
###################

replicaCount: 1

image:
  repository: ghcr.io/onetop21/mlappdeploy/api-server
  pullPolicy: Always
  tag: 0.4.2	# AUTO GENERATED

port: 8440

imagePullSecrets: []
nameOverride: "mlad-api-server"
fullnameOverride: "mlad-api-server"

additionLabels:

env:
  MLAD_DEBUG: 1
  MLAD_KUBE: 1
  PYTHONUNBUFFERED: 1

clusterRole:
  enabled: true
  rules:
    - apiGroups: ["", "apps", "batch", "extensions", "rbac.authorization.k8s.io", "networking.k8s.io", "metrics.k8s.io"]
      resources: [
        "nodes", "namespaces", "services", "pods", "pods/log", "replicationcontrollers",
        "deployments", "deployments/scale", "daemonsets", "replicasets", "jobs",
        "configmaps", "secrets", "events", "rolebindings",
        "ingresses", "podmetrics", "persistentvolumeclaims", "persistentvolumes"]
      verbs: ["get", "watch", "list", "create", "update", "delete", "patch", "deletecollection"]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true  # for solving a performance issue in docker engine.
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8440
  targetPort: 8440

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - paths:
      - path: /
          
tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
