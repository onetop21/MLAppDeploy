name: API Server Image CI

env:
  # TODO: Change variable to your image's name.
  REPOSITORY: ghcr.io
  IMAGE_NAME: api-server
  
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      registry:
        description: 'Target registry'
        required: False
        default: ${{ env.REPOSITORY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker image
      run: |
        docker build . --file scripts/Dockerfile_CI --tag $IMAGE_NAME
        
    - name: Log into registry
      run: >
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin 
        
    - name: Push image
      run: |
        [[ ${{ github.event.inputs.registry }} ]] && REPOSITORY=${{ github.event.inputs.registry }}
        IMAGE_ID=$REPOSITORY/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        
        if [[ "${{ github.event_name }}" == 'workflow_dispatch' ]]
        then
          VERSION=dev
        elif [[ "${{ github.event_name }}" == 'release' ]]
        then
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          WITH_LATEST=1
        fi
        
        ID=$(docker image ls $IMAGE_NAME:latest -q)
        
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $ID $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        [ $WITH_LATEST ] && {
          docker tag $ID $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
        } || :
        
