name: Docker Image CI

on:
  push:
    # branches: [ dev ]
    branches: [ master, dev ]
    # Publish `v1.2.3` tags as releases.
    tags:
    - v*
  pull_request:
    branches: [ dev ]

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: service
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Build the Docker image
      run: docker build . --file scripts/Dockerfile_CI --tag $IMAGE_NAME
      
    - name: Log into registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin 
        #echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        echo "${{ secrets.DOCKERHUB_TOKEN }}"
        echo "${{ github.ref }}"

    - name: Push image
      run: |
        #IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
        # Use Docker `latest` tag convention
        [ "$VERSION" == "dev" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
